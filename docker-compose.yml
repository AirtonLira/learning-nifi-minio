version: '3.8'

services:
  # Apache NiFi
  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      - NIFI_WEB_HTTP_PORT=8443
      - NIFI_WEB_HTTP_HOST=0.0.0.0
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=adminpassword
    volumes:
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_database:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
    networks:
      - data_network

  # NiFi Registry
  nifi-registry:
    image: apache/nifi-registry:latest
    container_name: nifi-registry
    user: "1000:1000"  # Adicione esta linha - use o UID e GID do seu usu√°rio
    ports:
      - "18080:18080"
    environment:
      - NIFI_REGISTRY_WEB_HTTP_PORT=18080
      - NIFI_REGISTRY_WEB_HTTP_HOST=0.0.0.0
    volumes:
      - nifi_registry_data:/opt/nifi-registry/nifi-registry-current
    networks:
      - data_network

  # MinIO
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - data_network

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/data/postgres
    restart: unless-stopped

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "airtonlirajr@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
    ports:
      - "80:80"
    depends_on:
      - postgres

volumes:
  # NiFi persistent volumes
  nifi_conf:
  nifi_content:
  nifi_database:
  nifi_flowfile:
  nifi_provenance:
  nifi_state:
  nifi_registry_data:
  
  # MinIO persistent volume
  minio_data:
  postgres_data:

networks:
  data_network:
    driver: bridge